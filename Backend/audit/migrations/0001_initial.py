# Generated by Django 5.2.7 on 2025-10-05 08:49

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('medications', '0001_initial'),
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClinicalDecisionAudit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('decision_type', models.CharField(choices=[('diagnosis', 'Diagnosis Made'), ('treatment_plan', 'Treatment Plan'), ('surgery_decision', 'Surgery Decision'), ('referral', 'Referral Decision'), ('discharge', 'Discharge Decision'), ('test_ordered', 'Test Ordered'), ('follow_up_scheduled', 'Follow-up Scheduled'), ('emergency_protocol', 'Emergency Protocol')], max_length=20)),
                ('decision_description', models.TextField()),
                ('clinical_reasoning', models.TextField(help_text='Clinical reasoning behind the decision')),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('moderate', 'Moderate Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], max_length=10)),
                ('risk_factors', models.TextField(blank=True)),
                ('mitigation_strategies', models.TextField(blank=True)),
                ('guidelines_followed', models.CharField(blank=True, max_length=200)),
                ('evidence_level', models.CharField(blank=True, choices=[('level_1', 'Level 1 - Systematic Review'), ('level_2', 'Level 2 - RCT'), ('level_3', 'Level 3 - Cohort Study'), ('level_4', 'Level 4 - Case Series'), ('level_5', 'Level 5 - Expert Opinion')], max_length=20)),
                ('expected_outcome', models.TextField(blank=True)),
                ('actual_outcome', models.TextField(blank=True)),
                ('outcome_date', models.DateField(blank=True, null=True)),
                ('patient_consent_obtained', models.BooleanField(default=False)),
                ('second_opinion_sought', models.BooleanField(default=False)),
                ('multidisciplinary_review', models.BooleanField(default=False)),
                ('decision_date', models.DateTimeField(auto_now_add=True)),
                ('decision_maker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinical_decisions', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Clinical Decision Audit',
                'verbose_name_plural': 'Clinical Decision Audits',
                'ordering': ['-decision_date'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('gdpr_compliance', 'GDPR Compliance'), ('hipaa_compliance', 'HIPAA Compliance'), ('clinical_audit', 'Clinical Audit'), ('medication_safety', 'Medication Safety'), ('data_quality', 'Data Quality'), ('security_review', 'Security Review'), ('access_review', 'Access Review')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('compliance_status', models.CharField(choices=[('compliant', 'Compliant'), ('minor_issues', 'Minor Issues'), ('major_issues', 'Major Issues'), ('non_compliant', 'Non-Compliant')], max_length=20)),
                ('key_findings', models.TextField()),
                ('recommendations', models.TextField()),
                ('action_items', models.TextField()),
                ('total_records_reviewed', models.PositiveIntegerField(default=0)),
                ('issues_identified', models.PositiveIntegerField(default=0)),
                ('issues_resolved', models.PositiveIntegerField(default=0)),
                ('report_file', models.FileField(blank=True, null=True, upload_to='compliance_reports/')),
                ('generated_date', models.DateTimeField(auto_now_add=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Compliance Report',
                'verbose_name_plural': 'Compliance Reports',
                'ordering': ['-generated_date'],
            },
        ),
        migrations.CreateModel(
            name='DataExportLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('export_type', models.CharField(choices=[('patient_data', 'Patient Data'), ('medical_records', 'Medical Records'), ('test_results', 'Test Results'), ('reports', 'Reports'), ('audit_logs', 'Audit Logs'), ('analytics', 'Analytics Data'), ('backup', 'System Backup')], max_length=20)),
                ('export_format', models.CharField(choices=[('pdf', 'PDF'), ('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON'), ('xml', 'XML'), ('dicom', 'DICOM')], max_length=10)),
                ('file_name', models.CharField(max_length=255)),
                ('file_size_bytes', models.BigIntegerField()),
                ('patient_ids', models.TextField(blank=True, help_text='JSON list of patient IDs')),
                ('date_range_start', models.DateField(blank=True, null=True)),
                ('date_range_end', models.DateField(blank=True, null=True)),
                ('filters_applied', models.JSONField(default=dict)),
                ('encryption_used', models.BooleanField(default=False)),
                ('password_protected', models.BooleanField(default=False)),
                ('access_expires', models.DateTimeField(blank=True, null=True)),
                ('export_reason', models.TextField(help_text='Legal/business reason for export')),
                ('data_controller_approval', models.BooleanField(default=False)),
                ('patient_consent_verified', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('export_time', models.DateTimeField(auto_now_add=True)),
                ('file_deleted_time', models.DateTimeField(blank=True, null=True)),
                ('exported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Data Export Log',
                'verbose_name_plural': 'Data Export Logs',
                'ordering': ['-export_time'],
            },
        ),
        migrations.CreateModel(
            name='MedicationAudit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('prescribed', 'Prescribed'), ('administered', 'Administered'), ('dispensed', 'Dispensed'), ('discontinued', 'Discontinued'), ('modified', 'Modified'), ('adverse_reaction', 'Adverse Reaction Reported'), ('allergy_recorded', 'Allergy Recorded'), ('stock_updated', 'Stock Updated')], max_length=20)),
                ('dosage', models.CharField(blank=True, max_length=100)),
                ('frequency', models.CharField(blank=True, max_length=100)),
                ('duration', models.CharField(blank=True, max_length=100)),
                ('interactions_checked', models.BooleanField(default=False)),
                ('allergies_checked', models.BooleanField(default=False)),
                ('contraindications_reviewed', models.BooleanField(default=False)),
                ('indication', models.TextField(help_text='Clinical indication for the medication')),
                ('clinical_notes', models.TextField(blank=True)),
                ('verification_time', models.DateTimeField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medications.medication')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medication_audits', to='patients.patient')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='medications.prescription')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_medications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Medication Audit',
                'verbose_name_plural': 'Medication Audits',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PatientAccessLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('access_type', models.CharField(choices=[('view_profile', 'View Profile'), ('view_medical_history', 'View Medical History'), ('view_prescriptions', 'View Prescriptions'), ('view_test_results', 'View Test Results'), ('view_images', 'View Medical Images'), ('edit_profile', 'Edit Profile'), ('add_consultation', 'Add Consultation'), ('add_prescription', 'Add Prescription'), ('add_test_result', 'Add Test Result'), ('export_data', 'Export Patient Data'), ('print_report', 'Print Report')], max_length=30)),
                ('data_accessed', models.TextField(help_text='Description of what data was accessed')),
                ('reason_for_access', models.TextField(help_text='Clinical or administrative reason')),
                ('ip_address', models.GenericIPAddressField()),
                ('session_id', models.CharField(max_length=50)),
                ('user_agent', models.TextField()),
                ('legitimate_interest', models.BooleanField(default=True)),
                ('patient_consent', models.BooleanField(default=True)),
                ('access_time', models.DateTimeField(auto_now_add=True)),
                ('session_duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('accessed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='patients.patient')),
            ],
            options={
                'verbose_name': 'Patient Access Log',
                'verbose_name_plural': 'Patient Access Logs',
                'ordering': ['-access_time'],
            },
        ),
        migrations.CreateModel(
            name='SystemSecurityEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('failed_login', 'Failed Login Attempt'), ('suspicious_activity', 'Suspicious Activity'), ('data_breach', 'Data Breach'), ('unauthorized_access', 'Unauthorized Access'), ('privilege_escalation', 'Privilege Escalation'), ('malware_detected', 'Malware Detected'), ('system_intrusion', 'System Intrusion'), ('ddos_attack', 'DDoS Attack')], max_length=30)),
                ('threat_level', models.CharField(choices=[('info', 'Informational'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('description', models.TextField()),
                ('source_ip', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('request_method', models.CharField(blank=True, max_length=10)),
                ('request_url', models.URLField(blank=True)),
                ('response_code', models.PositiveIntegerField(blank=True, null=True)),
                ('payload_data', models.JSONField(default=dict)),
                ('automated_response', models.TextField(blank=True)),
                ('manual_response_required', models.BooleanField(default=False)),
                ('incident_ticket_number', models.CharField(blank=True, max_length=50)),
                ('resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('event_time', models.DateTimeField(auto_now_add=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_security_events', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Security Event',
                'verbose_name_plural': 'System Security Events',
                'ordering': ['-event_time'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(blank=True, max_length=50)),
                ('action', models.CharField(choices=[('create', 'Create'), ('read', 'Read/View'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('export', 'Export Data'), ('print', 'Print Document'), ('access_denied', 'Access Denied')], max_length=20)),
                ('resource_name', models.CharField(help_text='Model or resource name', max_length=100)),
                ('resource_id', models.CharField(help_text='ID of the affected resource', max_length=100)),
                ('object_id', models.CharField(blank=True, max_length=100, null=True)),
                ('changes', models.JSONField(default=dict, help_text='Details of what changed')),
                ('old_values', models.JSONField(default=dict, help_text='Previous values')),
                ('new_values', models.JSONField(default=dict, help_text='New values')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('request_method', models.CharField(blank=True, max_length=10)),
                ('request_url', models.URLField(blank=True)),
                ('description', models.TextField(help_text='Human readable description of the action')),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=10)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200)),
                ('gdpr_relevant', models.BooleanField(default=False)),
                ('hipaa_relevant', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='audit_audit_user_id_e8be02_idx'), models.Index(fields=['action', 'timestamp'], name='audit_audit_action_2a1328_idx'), models.Index(fields=['resource_name', 'timestamp'], name='audit_audit_resourc_0625e3_idx'), models.Index(fields=['ip_address', 'timestamp'], name='audit_audit_ip_addr_4a1174_idx')],
            },
        ),
    ]
