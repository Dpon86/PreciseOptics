# Generated by Django 5.2.7 on 2025-10-05 08:49

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consultation_type', models.CharField(choices=[('initial', 'Initial Consultation'), ('follow_up', 'Follow-up Consultation'), ('emergency', 'Emergency Consultation'), ('pre_operative', 'Pre-operative Assessment'), ('post_operative', 'Post-operative Follow-up'), ('routine_check', 'Routine Check-up'), ('second_opinion', 'Second Opinion')], max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', max_length=20)),
                ('scheduled_time', models.DateTimeField()),
                ('actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('chief_complaint', models.TextField(help_text="Patient's primary concern")),
                ('history_of_present_illness', models.TextField(blank=True)),
                ('past_ocular_history', models.TextField(blank=True)),
                ('past_medical_history', models.TextField(blank=True)),
                ('family_history', models.TextField(blank=True)),
                ('social_history', models.TextField(blank=True)),
                ('current_medications', models.TextField(blank=True)),
                ('allergies', models.TextField(blank=True)),
                ('general_examination', models.TextField(blank=True)),
                ('clinical_impression', models.TextField(blank=True)),
                ('diagnosis_primary', models.TextField(blank=True)),
                ('diagnosis_secondary', models.TextField(blank=True)),
                ('treatment_plan', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_duration', models.CharField(blank=True, max_length=100)),
                ('follow_up_instructions', models.TextField(blank=True)),
                ('referral_required', models.BooleanField(default=False)),
                ('referral_to', models.CharField(blank=True, max_length=200)),
                ('referral_reason', models.TextField(blank=True)),
                ('consultation_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consulting_doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='patients.patient')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='patients.patientvisit')),
            ],
            options={
                'verbose_name': 'Consultation',
                'verbose_name_plural': 'Consultations',
                'ordering': ['-scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('consultation_notes', 'Consultation Notes'), ('medical_certificate', 'Medical Certificate'), ('referral_letter', 'Referral Letter'), ('treatment_plan', 'Treatment Plan'), ('discharge_summary', 'Discharge Summary'), ('consent_form', 'Consent Form'), ('report', 'Medical Report'), ('other', 'Other')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='consultation_documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='consultations.consultation')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consultation Document',
                'verbose_name_plural': 'Consultation Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image_type', models.CharField(choices=[('fundus_photo', 'Fundus Photography'), ('anterior_segment', 'Anterior Segment'), ('external_eye', 'External Eye'), ('oct', 'OCT Image'), ('visual_field', 'Visual Field'), ('angiogram', 'Angiogram'), ('ultrasound', 'Ultrasound'), ('x_ray', 'X-Ray'), ('other', 'Other')], max_length=20)),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(upload_to='consultation_images/')),
                ('equipment_used', models.CharField(blank=True, max_length=200)),
                ('settings', models.TextField(blank=True, help_text='Camera/equipment settings')),
                ('findings', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='consultations.consultation')),
                ('taken_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consultation Image',
                'verbose_name_plural': 'Consultation Images',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VitalSigns',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('blood_pressure_systolic', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(300)])),
                ('blood_pressure_diastolic', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(200)])),
                ('heart_rate', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(220)])),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(30.0), django.core.validators.MaxValueValidator(45.0)])),
                ('respiratory_rate', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(8), django.core.validators.MaxValueValidator(60)])),
                ('oxygen_saturation', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(70), django.core.validators.MaxValueValidator(100)])),
                ('height_cm', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(50.0), django.core.validators.MaxValueValidator(250.0)])),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(10.0), django.core.validators.MaxValueValidator(300.0)])),
                ('bmi', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(10.0), django.core.validators.MaxValueValidator(50.0)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='consultations.consultation')),
                ('measured_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vital Signs',
                'verbose_name_plural': 'Vital Signs',
            },
        ),
    ]
