# Generated by Django 5.2.7 on 2025-10-05 08:49

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('consultations', '0001_initial'),
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CataractAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateTimeField()),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='scheduled', max_length=20)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('right_eye_cataract_type', models.CharField(blank=True, choices=[('nuclear', 'Nuclear Sclerosis'), ('cortical', 'Cortical Cataract'), ('psc', 'Posterior Subcapsular'), ('anterior_polar', 'Anterior Polar'), ('posterior_polar', 'Posterior Polar'), ('traumatic', 'Traumatic'), ('congenital', 'Congenital'), ('mixed', 'Mixed Type')], max_length=20)),
                ('right_eye_severity', models.CharField(blank=True, choices=[('trace', 'Trace'), ('mild', 'Mild (Grade 1)'), ('moderate', 'Moderate (Grade 2)'), ('severe', 'Severe (Grade 3)'), ('mature', 'Mature (Grade 4)')], max_length=20)),
                ('right_eye_lens_clarity', models.TextField(blank=True)),
                ('left_eye_cataract_type', models.CharField(blank=True, choices=[('nuclear', 'Nuclear Sclerosis'), ('cortical', 'Cortical Cataract'), ('psc', 'Posterior Subcapsular'), ('anterior_polar', 'Anterior Polar'), ('posterior_polar', 'Posterior Polar'), ('traumatic', 'Traumatic'), ('congenital', 'Congenital'), ('mixed', 'Mixed Type')], max_length=20)),
                ('left_eye_severity', models.CharField(blank=True, choices=[('trace', 'Trace'), ('mild', 'Mild (Grade 1)'), ('moderate', 'Moderate (Grade 2)'), ('severe', 'Severe (Grade 3)'), ('mature', 'Mature (Grade 4)')], max_length=20)),
                ('left_eye_lens_clarity', models.TextField(blank=True)),
                ('glare_disability', models.BooleanField(default=False)),
                ('contrast_sensitivity_reduced', models.BooleanField(default=False)),
                ('visual_function_impact', models.TextField(blank=True)),
                ('surgery_recommended', models.BooleanField(default=False)),
                ('urgency_level', models.CharField(blank=True, choices=[('routine', 'Routine'), ('soon', 'Soon (within 3 months)'), ('urgent', 'Urgent (within 6 weeks)'), ('expedite', 'Expedite (within 2 weeks)')], max_length=20)),
                ('iol_power_calculation', models.TextField(blank=True)),
                ('target_refraction', models.CharField(blank=True, max_length=50)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cataract Assessment',
                'verbose_name_plural': 'Cataract Assessments',
            },
        ),
        migrations.CreateModel(
            name='CornealAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateTimeField()),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='scheduled', max_length=20)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('right_upper_lid_normal', models.BooleanField(default=True)),
                ('right_lower_lid_normal', models.BooleanField(default=True)),
                ('left_upper_lid_normal', models.BooleanField(default=True)),
                ('left_lower_lid_normal', models.BooleanField(default=True)),
                ('lid_abnormalities', models.TextField(blank=True)),
                ('right_conjunctiva_normal', models.BooleanField(default=True)),
                ('left_conjunctiva_normal', models.BooleanField(default=True)),
                ('conjunctival_injection', models.BooleanField(default=False)),
                ('conjunctival_discharge', models.BooleanField(default=False)),
                ('right_cornea_clear', models.BooleanField(default=True)),
                ('left_cornea_clear', models.BooleanField(default=True)),
                ('corneal_opacity', models.BooleanField(default=False)),
                ('corneal_edema', models.BooleanField(default=False)),
                ('corneal_neovascularization', models.BooleanField(default=False)),
                ('fluorescein_staining_performed', models.BooleanField(default=False)),
                ('right_staining_pattern', models.TextField(blank=True)),
                ('left_staining_pattern', models.TextField(blank=True)),
                ('dry_eye_present', models.BooleanField(default=False)),
                ('keratoconus', models.BooleanField(default=False)),
                ('corneal_dystrophy', models.BooleanField(default=False)),
                ('lubricants_prescribed', models.BooleanField(default=False)),
                ('antibiotics_prescribed', models.BooleanField(default=False)),
                ('steroids_prescribed', models.BooleanField(default=False)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Corneal Assessment',
                'verbose_name_plural': 'Corneal Assessments',
            },
        ),
        migrations.CreateModel(
            name='DiabeticRetinopathyScreening',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateTimeField()),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='scheduled', max_length=20)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('diabetes_type', models.CharField(choices=[('type1', 'Type 1'), ('type2', 'Type 2'), ('gestational', 'Gestational'), ('other', 'Other')], max_length=15)),
                ('diabetes_duration_years', models.PositiveIntegerField(blank=True, null=True)),
                ('last_hba1c', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('right_eye_dr_grade', models.CharField(blank=True, choices=[('r0', 'R0 - No Retinopathy'), ('r1', 'R1 - Mild Non-proliferative'), ('r2', 'R2 - Moderate Non-proliferative'), ('r3a', 'R3a - Severe Non-proliferative'), ('r3s', 'R3s - Proliferative')], max_length=5)),
                ('left_eye_dr_grade', models.CharField(blank=True, choices=[('r0', 'R0 - No Retinopathy'), ('r1', 'R1 - Mild Non-proliferative'), ('r2', 'R2 - Moderate Non-proliferative'), ('r3a', 'R3a - Severe Non-proliferative'), ('r3s', 'R3s - Proliferative')], max_length=5)),
                ('right_eye_maculopathy', models.CharField(blank=True, choices=[('m0', 'M0 - No Maculopathy'), ('m1', 'M1 - Maculopathy Present')], max_length=5)),
                ('left_eye_maculopathy', models.CharField(blank=True, choices=[('m0', 'M0 - No Maculopathy'), ('m1', 'M1 - Maculopathy Present')], max_length=5)),
                ('photo_quality_right', models.CharField(blank=True, choices=[('p0', 'P0 - Adequate Photos'), ('p1', 'P1 - Inadequate Photos')], max_length=5)),
                ('photo_quality_left', models.CharField(blank=True, choices=[('p0', 'P0 - Adequate Photos'), ('p1', 'P1 - Inadequate Photos')], max_length=5)),
                ('microaneurysms_right', models.BooleanField(default=False)),
                ('microaneurysms_left', models.BooleanField(default=False)),
                ('hemorrhages_right', models.BooleanField(default=False)),
                ('hemorrhages_left', models.BooleanField(default=False)),
                ('exudates_right', models.BooleanField(default=False)),
                ('exudates_left', models.BooleanField(default=False)),
                ('cotton_wool_spots_right', models.BooleanField(default=False)),
                ('cotton_wool_spots_left', models.BooleanField(default=False)),
                ('venous_beading_right', models.BooleanField(default=False)),
                ('venous_beading_left', models.BooleanField(default=False)),
                ('irma_right', models.BooleanField(default=False)),
                ('irma_left', models.BooleanField(default=False)),
                ('neovascularization_right', models.BooleanField(default=False)),
                ('neovascularization_left', models.BooleanField(default=False)),
                ('referral_required', models.BooleanField(default=False)),
                ('referral_urgency', models.CharField(blank=True, choices=[('routine', 'Routine'), ('urgent', 'Urgent'), ('immediate', 'Immediate')], max_length=20)),
                ('next_screening_months', models.PositiveIntegerField(default=12)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Diabetic Retinopathy Screening',
                'verbose_name_plural': 'Diabetic Retinopathy Screenings',
            },
        ),
        migrations.CreateModel(
            name='EyeCasualtyAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateTimeField()),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='scheduled', max_length=20)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('injury_type', models.CharField(choices=[('blunt_trauma', 'Blunt Trauma'), ('penetrating', 'Penetrating Injury'), ('chemical_burn', 'Chemical Burn'), ('thermal_burn', 'Thermal Burn'), ('foreign_body', 'Foreign Body'), ('flash_burn', 'Flash Burn'), ('laceration', 'Laceration'), ('other', 'Other')], max_length=20)),
                ('triage_category', models.CharField(choices=[('immediate', 'Immediate - Red'), ('urgent', 'Urgent - Orange'), ('less_urgent', 'Less Urgent - Yellow'), ('non_urgent', 'Non-urgent - Green')], max_length=20)),
                ('mechanism_of_injury', models.TextField()),
                ('time_of_injury', models.DateTimeField()),
                ('pain_level', models.PositiveIntegerField(help_text='Pain scale 0-10', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('vision_loss', models.BooleanField(default=False)),
                ('diplopia', models.BooleanField(default=False)),
                ('photophobia', models.BooleanField(default=False)),
                ('discharge', models.BooleanField(default=False)),
                ('eyelid_injury', models.BooleanField(default=False)),
                ('conjunctival_hemorrhage', models.BooleanField(default=False)),
                ('corneal_abrasion', models.BooleanField(default=False)),
                ('hyphema', models.BooleanField(default=False)),
                ('pupil_abnormality', models.BooleanField(default=False)),
                ('irrigation_performed', models.BooleanField(default=False)),
                ('foreign_body_removed', models.BooleanField(default=False)),
                ('pressure_patch_applied', models.BooleanField(default=False)),
                ('admission_required', models.BooleanField(default=False)),
                ('surgery_required', models.BooleanField(default=False)),
                ('discharge_home', models.BooleanField(default=True)),
                ('follow_up_arranged', models.BooleanField(default=False)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Eye Casualty Assessment',
                'verbose_name_plural': 'Eye Casualty Assessments',
            },
        ),
        migrations.CreateModel(
            name='GlaucomaAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateTimeField()),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='scheduled', max_length=20)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('right_eye_iop', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(80)])),
                ('left_eye_iop', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(80)])),
                ('iop_method', models.CharField(choices=[('goldmann', 'Goldmann Applanation'), ('tonopen', 'Tonopen'), ('pneumatic', 'Pneumatic Tonometry'), ('rebound', 'Rebound Tonometry')], default='goldmann', max_length=20)),
                ('right_disc_cup_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('left_disc_cup_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('right_disc_hemorrhage', models.BooleanField(default=False)),
                ('left_disc_hemorrhage', models.BooleanField(default=False)),
                ('right_disc_notching', models.BooleanField(default=False)),
                ('left_disc_notching', models.BooleanField(default=False)),
                ('right_nfl_defect', models.BooleanField(default=False)),
                ('left_nfl_defect', models.BooleanField(default=False)),
                ('nfl_description', models.TextField(blank=True)),
                ('visual_field_defects', models.BooleanField(default=False)),
                ('family_history_glaucoma', models.BooleanField(default=False)),
                ('diabetes', models.BooleanField(default=False)),
                ('myopia', models.BooleanField(default=False)),
                ('central_corneal_thickness_right', models.PositiveIntegerField(blank=True, null=True)),
                ('central_corneal_thickness_left', models.PositiveIntegerField(blank=True, null=True)),
                ('glaucoma_type', models.CharField(blank=True, choices=[('poag', 'Primary Open Angle Glaucoma'), ('pacg', 'Primary Angle Closure Glaucoma'), ('nsg', 'Normal Tension Glaucoma'), ('secondary', 'Secondary Glaucoma'), ('suspect', 'Glaucoma Suspect'), ('normal', 'Normal')], max_length=30)),
                ('treatment_required', models.BooleanField(default=False)),
                ('target_iop', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Glaucoma Assessment',
                'verbose_name_plural': 'Glaucoma Assessments',
            },
        ),
        migrations.CreateModel(
            name='OCTScan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateTimeField()),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='scheduled', max_length=20)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scan_type', models.CharField(choices=[('macula', 'Macular Scan'), ('optic_disc', 'Optic Disc Scan'), ('rnfl', 'RNFL Thickness'), ('anterior_segment', 'Anterior Segment'), ('wide_field', 'Wide Field')], max_length=20)),
                ('machine_model', models.CharField(blank=True, max_length=100)),
                ('right_central_thickness', models.PositiveIntegerField(blank=True, help_text='Microns', null=True)),
                ('right_average_thickness', models.PositiveIntegerField(blank=True, null=True)),
                ('right_findings', models.TextField(blank=True)),
                ('left_central_thickness', models.PositiveIntegerField(blank=True, null=True)),
                ('left_average_thickness', models.PositiveIntegerField(blank=True, null=True)),
                ('left_findings', models.TextField(blank=True)),
                ('right_eye_image', models.ImageField(blank=True, null=True, upload_to='oct_scans/')),
                ('left_eye_image', models.ImageField(blank=True, null=True, upload_to='oct_scans/')),
                ('scan_quality', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('acceptable', 'Acceptable'), ('poor', 'Poor')], default='good', max_length=20)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'OCT Scan',
                'verbose_name_plural': 'OCT Scans',
            },
        ),
        migrations.CreateModel(
            name='PediatricEyeExam',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateTimeField()),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='scheduled', max_length=20)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('age_at_exam', models.PositiveIntegerField(help_text='Age in months')),
                ('cooperation_level', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], default='good', max_length=20)),
                ('fixation_right', models.CharField(blank=True, choices=[('central_steady', 'Central Steady'), ('central_unsteady', 'Central Unsteady'), ('eccentric', 'Eccentric'), ('unable_assess', 'Unable to Assess')], max_length=20)),
                ('fixation_left', models.CharField(blank=True, choices=[('central_steady', 'Central Steady'), ('central_unsteady', 'Central Unsteady'), ('eccentric', 'Eccentric'), ('unable_assess', 'Unable to Assess')], max_length=20)),
                ('horizontal_tracking', models.BooleanField(default=True)),
                ('vertical_tracking', models.BooleanField(default=True)),
                ('smooth_pursuits', models.BooleanField(default=True)),
                ('red_reflex_right', models.BooleanField(default=True)),
                ('red_reflex_left', models.BooleanField(default=True)),
                ('corneal_light_reflex', models.CharField(blank=True, choices=[('central', 'Central Bilateral'), ('decentered', 'Decentered'), ('unable_assess', 'Unable to Assess')], max_length=20)),
                ('developmental_concerns', models.TextField(blank=True)),
                ('family_history_eye_problems', models.BooleanField(default=False)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pediatric Eye Exam',
                'verbose_name_plural': 'Pediatric Eye Exams',
            },
        ),
        migrations.CreateModel(
            name='RefractionTest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateTimeField()),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='scheduled', max_length=20)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('method', models.CharField(choices=[('subjective', 'Subjective Refraction'), ('objective', 'Objective Refraction (Autorefractor)'), ('retinoscopy', 'Retinoscopy'), ('cycloplegic', 'Cycloplegic Refraction')], max_length=20)),
                ('right_sphere', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('right_cylinder', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('right_axis', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(180)])),
                ('right_add', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('right_prism', models.CharField(blank=True, max_length=20)),
                ('left_sphere', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('left_cylinder', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('left_axis', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(180)])),
                ('left_add', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('left_prism', models.CharField(blank=True, max_length=20)),
                ('pupillary_distance', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Refraction Test',
                'verbose_name_plural': 'Refraction Tests',
            },
        ),
        migrations.CreateModel(
            name='RetinalAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateTimeField()),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='scheduled', max_length=20)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('right_retina_findings', models.TextField(blank=True)),
                ('left_retina_findings', models.TextField(blank=True)),
                ('right_macula_normal', models.BooleanField(default=True)),
                ('left_macula_normal', models.BooleanField(default=True)),
                ('right_macula_findings', models.TextField(blank=True)),
                ('left_macula_findings', models.TextField(blank=True)),
                ('arteriovenous_nicking', models.BooleanField(default=False)),
                ('cotton_wool_spots', models.BooleanField(default=False)),
                ('hard_exudates', models.BooleanField(default=False)),
                ('hemorrhages', models.BooleanField(default=False)),
                ('microaneurysms', models.BooleanField(default=False)),
                ('diabetic_retinopathy_present', models.BooleanField(default=False)),
                ('amd_present', models.BooleanField(default=False)),
                ('retinal_detachment', models.BooleanField(default=False)),
                ('primary_diagnosis', models.CharField(blank=True, max_length=200)),
                ('secondary_diagnosis', models.CharField(blank=True, max_length=200)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Retinal Assessment',
                'verbose_name_plural': 'Retinal Assessments',
            },
        ),
        migrations.CreateModel(
            name='StrabismusAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateTimeField()),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='scheduled', max_length=20)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cover_test_distance', models.CharField(blank=True, choices=[('orthophoric', 'Orthophoric'), ('esotropia', 'Esotropia'), ('exotropia', 'Exotropia'), ('hypertropia_right', 'Right Hypertropia'), ('hypertropia_left', 'Left Hypertropia'), ('alternating', 'Alternating')], max_length=30)),
                ('cover_test_near', models.CharField(blank=True, choices=[('orthophoric', 'Orthophoric'), ('esotropia', 'Esotropia'), ('exotropia', 'Exotropia'), ('hypertropia_right', 'Right Hypertropia'), ('hypertropia_left', 'Left Hypertropia'), ('alternating', 'Alternating')], max_length=30)),
                ('distance_deviation_horizontal', models.CharField(blank=True, max_length=20)),
                ('distance_deviation_vertical', models.CharField(blank=True, max_length=20)),
                ('near_deviation_horizontal', models.CharField(blank=True, max_length=20)),
                ('near_deviation_vertical', models.CharField(blank=True, max_length=20)),
                ('right_eye_motility', models.TextField(blank=True)),
                ('left_eye_motility', models.TextField(blank=True)),
                ('binocular_movements', models.TextField(blank=True)),
                ('stereopsis', models.CharField(blank=True, max_length=50)),
                ('fusion', models.CharField(blank=True, choices=[('present', 'Present'), ('absent', 'Absent'), ('intermittent', 'Intermittent')], max_length=20)),
                ('amblyopia_present', models.BooleanField(default=False)),
                ('amblyopic_eye', models.CharField(blank=True, choices=[('right', 'Right'), ('left', 'Left'), ('bilateral', 'Bilateral')], max_length=10)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Strabismus Assessment',
                'verbose_name_plural': 'Strabismus Assessments',
            },
        ),
        migrations.CreateModel(
            name='VisualAcuityTest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateTimeField()),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='scheduled', max_length=20)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('test_method', models.CharField(choices=[('snellen_chart', 'Snellen Chart'), ('logmar_chart', 'LogMAR Chart'), ('etdrs_chart', 'ETDRS Chart'), ('kay_pictures', 'Kay Pictures (Pediatric)'), ('lea_symbols', 'Lea Symbols'), ('cardiff_cards', 'Cardiff Acuity Cards')], default='snellen_chart', max_length=20)),
                ('right_eye_unaided', models.CharField(blank=True, help_text='e.g., 6/60, 20/200', max_length=20)),
                ('right_eye_aided', models.CharField(blank=True, max_length=20)),
                ('right_eye_pinhole', models.CharField(blank=True, max_length=20)),
                ('left_eye_unaided', models.CharField(blank=True, max_length=20)),
                ('left_eye_aided', models.CharField(blank=True, max_length=20)),
                ('left_eye_pinhole', models.CharField(blank=True, max_length=20)),
                ('binocular_vision', models.CharField(blank=True, max_length=20)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Visual Acuity Test',
                'verbose_name_plural': 'Visual Acuity Tests',
            },
        ),
        migrations.CreateModel(
            name='VisualFieldTest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateTimeField()),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='scheduled', max_length=20)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('test_type', models.CharField(choices=[('humphrey_24_2', 'Humphrey 24-2'), ('humphrey_30_2', 'Humphrey 30-2'), ('humphrey_10_2', 'Humphrey 10-2'), ('octopus_g1', 'Octopus G1'), ('octopus_m1', 'Octopus M1'), ('goldmann', 'Goldmann Perimetry'), ('confrontation', 'Confrontation Fields')], max_length=20)),
                ('strategy', models.CharField(choices=[('sita_standard', 'SITA Standard'), ('sita_fast', 'SITA Fast'), ('sita_faster', 'SITA Faster'), ('full_threshold', 'Full Threshold')], default='sita_standard', max_length=20)),
                ('right_eye_md', models.DecimalField(blank=True, decimal_places=2, help_text='Mean Deviation', max_digits=5, null=True)),
                ('right_eye_psd', models.DecimalField(blank=True, decimal_places=2, help_text='Pattern Standard Deviation', max_digits=5, null=True)),
                ('right_eye_vfi', models.DecimalField(blank=True, decimal_places=2, help_text='Visual Field Index', max_digits=5, null=True)),
                ('right_eye_reliability', models.CharField(blank=True, max_length=20)),
                ('left_eye_md', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('left_eye_psd', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('left_eye_vfi', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('left_eye_reliability', models.CharField(blank=True, max_length=20)),
                ('right_eye_defects', models.TextField(blank=True)),
                ('left_eye_defects', models.TextField(blank=True)),
                ('fixation_losses_right', models.CharField(blank=True, max_length=10)),
                ('false_positives_right', models.CharField(blank=True, max_length=10)),
                ('false_negatives_right', models.CharField(blank=True, max_length=10)),
                ('fixation_losses_left', models.CharField(blank=True, max_length=10)),
                ('false_positives_left', models.CharField(blank=True, max_length=10)),
                ('false_negatives_left', models.CharField(blank=True, max_length=10)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Visual Field Test',
                'verbose_name_plural': 'Visual Field Tests',
            },
        ),
        migrations.CreateModel(
            name='VitreoretinalAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_date', models.DateTimeField()),
                ('eye_side', models.CharField(choices=[('both', 'Both Eyes'), ('left', 'Left Eye'), ('right', 'Right Eye')], default='both', max_length=10)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('incomplete', 'Incomplete')], default='scheduled', max_length=20)),
                ('findings', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('right_vitreous_clear', models.BooleanField(default=True)),
                ('left_vitreous_clear', models.BooleanField(default=True)),
                ('right_vitreous_hemorrhage', models.BooleanField(default=False)),
                ('left_vitreous_hemorrhage', models.BooleanField(default=False)),
                ('right_pvd', models.BooleanField(default=False)),
                ('left_pvd', models.BooleanField(default=False)),
                ('right_retinal_detachment', models.BooleanField(default=False)),
                ('left_retinal_detachment', models.BooleanField(default=False)),
                ('rd_type', models.CharField(blank=True, choices=[('rhegmatogenous', 'Rhegmatogenous'), ('tractional', 'Tractional'), ('exudative', 'Exudative')], max_length=20)),
                ('right_macular_hole', models.BooleanField(default=False)),
                ('left_macular_hole', models.BooleanField(default=False)),
                ('right_epiretinal_membrane', models.BooleanField(default=False)),
                ('left_epiretinal_membrane', models.BooleanField(default=False)),
                ('surgery_required', models.BooleanField(default=False)),
                ('surgical_procedure', models.CharField(blank=True, max_length=200)),
                ('urgency', models.CharField(blank=True, choices=[('elective', 'Elective'), ('urgent', 'Urgent'), ('emergency', 'Emergency')], max_length=20)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='consultations.consultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.patient')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vitreoretinal Assessment',
                'verbose_name_plural': 'Vitreoretinal Assessments',
            },
        ),
    ]
