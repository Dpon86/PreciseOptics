# Generated by Django 5.2.7 on 2025-10-15 14:24

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('consultations', '0001_initial'),
        ('medications', '0001_initial'),
        ('patients', '0002_phone_fields_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('eye_treated', models.CharField(choices=[('right', 'Right Eye (OD)'), ('left', 'Left Eye (OS)'), ('both', 'Both Eyes (OU)')], max_length=10)),
                ('status', models.CharField(choices=[('planned', 'Treatment Planned'), ('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('postponed', 'Postponed'), ('failed', 'Failed')], default='planned', max_length=20)),
                ('priority', models.CharField(choices=[('routine', 'Routine'), ('urgent', 'Urgent'), ('emergency', 'Emergency')], default='routine', max_length=20)),
                ('scheduled_date', models.DateTimeField(blank=True, null=True)),
                ('actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('indication', models.TextField(help_text='Clinical indication for treatment')),
                ('technique_notes', models.TextField(blank=True, help_text='Surgical technique and approach')),
                ('anesthesia_used', models.CharField(blank=True, choices=[('none', 'No Anesthesia'), ('topical', 'Topical Anesthesia'), ('local', 'Local Anesthesia'), ('regional', 'Regional Anesthesia'), ('general', 'General Anesthesia')], max_length=20)),
                ('outcome', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('satisfactory', 'Satisfactory'), ('poor', 'Poor'), ('failed', 'Failed'), ('pending', 'Pending Assessment')], default='pending', max_length=20)),
                ('complications_notes', models.TextField(blank=True, help_text='General complications notes')),
                ('post_operative_instructions', models.TextField(blank=True)),
                ('requires_follow_up', models.BooleanField(default=True)),
                ('follow_up_weeks', models.PositiveIntegerField(blank=True, null=True)),
                ('follow_up_instructions', models.TextField(blank=True)),
                ('consent_obtained', models.BooleanField(default=False)),
                ('consent_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assisting_staff', models.ManyToManyField(blank=True, limit_choices_to={'role__in': ['doctor', 'nurse', 'technician']}, related_name='assisted_treatments', to=settings.AUTH_USER_MODEL)),
                ('consent_obtained_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='consented_treatments', to=settings.AUTH_USER_MODEL)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatments', to='consultations.consultation')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_treatments', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatments', to='patients.patient')),
                ('primary_surgeon', models.ForeignKey(limit_choices_to={'role__in': ['doctor', 'consultant']}, on_delete=django.db.models.deletion.PROTECT, related_name='primary_treatments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-scheduled_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category_type', models.CharField(choices=[('medical', 'Medical Treatment'), ('surgical', 'Surgical Treatment'), ('laser', 'Laser Treatment'), ('injection', 'Injection Treatment'), ('optical', 'Optical Treatment'), ('therapy', 'Vision Therapy'), ('emergency', 'Emergency Treatment'), ('preventive', 'Preventive Care')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_treatment_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Treatment Categories',
                'ordering': ['category_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentComplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('complication_type', models.CharField(choices=[('infection', 'Infection'), ('bleeding', 'Bleeding/Hemorrhage'), ('vision_loss', 'Vision Loss'), ('retinal_detachment', 'Retinal Detachment'), ('increased_pressure', 'Increased Intraocular Pressure'), ('allergic_reaction', 'Allergic Reaction'), ('equipment_failure', 'Equipment Failure'), ('anesthesia_reaction', 'Anesthesia Reaction'), ('other', 'Other')], max_length=30)),
                ('severity', models.CharField(choices=[('minor', 'Minor'), ('moderate', 'Moderate'), ('major', 'Major'), ('life_threatening', 'Life Threatening')], max_length=20)),
                ('description', models.TextField()),
                ('onset_time', models.DateTimeField()),
                ('resolution_time', models.DateTimeField(blank=True, null=True)),
                ('treatment_given', models.TextField()),
                ('outcome', models.TextField(blank=True)),
                ('preventable', models.BooleanField(help_text='Was this complication preventable?', null=True)),
                ('reported_to_clinical_governance', models.BooleanField(default=False)),
                ('incident_number', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('treatment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complications', to='treatments.treatment')),
            ],
            options={
                'ordering': ['-onset_time'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('consent_form', 'Consent Form'), ('surgical_notes', 'Surgical Notes'), ('pre_op_assessment', 'Pre-operative Assessment'), ('post_op_notes', 'Post-operative Notes'), ('discharge_summary', 'Discharge Summary'), ('follow_up_plan', 'Follow-up Plan'), ('complication_report', 'Complication Report'), ('images', 'Clinical Images'), ('lab_results', 'Laboratory Results'), ('other', 'Other')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='treatments/documents/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('treatment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='treatments.treatment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentFollowUp',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scheduled_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('missed', 'Missed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('visual_outcome', models.TextField(blank=True)),
                ('complications_noted', models.TextField(blank=True)),
                ('patient_satisfaction', models.PositiveIntegerField(blank=True, help_text='Patient satisfaction score (1-10)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('further_treatment_required', models.BooleanField(default=False)),
                ('next_appointment_weeks', models.PositiveIntegerField(blank=True, null=True)),
                ('additional_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessed_by', models.ForeignKey(limit_choices_to={'role__in': ['doctor', 'nurse', 'optometrist']}, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('treatment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_ups', to='treatments.treatment')),
            ],
            options={
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentMedication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timing', models.CharField(choices=[('pre_operative', 'Pre-operative'), ('intra_operative', 'Intra-operative'), ('post_operative', 'Post-operative'), ('ongoing', 'Ongoing')], max_length=20)),
                ('dosage', models.CharField(max_length=100)),
                ('frequency', models.CharField(max_length=100)),
                ('duration_days', models.PositiveIntegerField(blank=True, null=True)),
                ('instructions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='medications.medication')),
                ('treatment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to='treatments.treatment')),
            ],
            options={
                'ordering': ['timing', 'medication__name'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(help_text='NHS/OPCS-4 procedure code', max_length=20, unique=True)),
                ('description', models.TextField()),
                ('typical_duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('requires_consent', models.BooleanField(default=False)),
                ('requires_anesthesia', models.CharField(choices=[('none', 'No Anesthesia'), ('topical', 'Topical Anesthesia'), ('local', 'Local Anesthesia'), ('regional', 'Regional Anesthesia'), ('general', 'General Anesthesia')], default='none', max_length=20)),
                ('urgency_level', models.CharField(choices=[('routine', 'Routine'), ('urgent', 'Urgent'), ('emergency', 'Emergency')], default='routine', max_length=20)),
                ('nice_guidance', models.URLField(blank=True, help_text='Link to NICE guidance')),
                ('contraindications', models.TextField(blank=True)),
                ('complications', models.TextField(blank=True)),
                ('success_rate_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('estimated_cost_gbp', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('waiting_list_weeks', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_types', to='treatments.treatmentcategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_treatment_types', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.AddField(
            model_name='treatment',
            name='treatment_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='treatments.treatmenttype'),
        ),
    ]
